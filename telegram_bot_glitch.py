#!/usr/bin/env python3
"""
Telegram-–±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π –ø–æ –∏–º–º–∏–≥—Ä–∞—Ü–∏–∏ (–≤–µ—Ä—Å–∏—è –¥–ª—è Glitch.com)
–í–∫–ª—é—á–∞–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è keep-alive
"""

import os
import sys
import logging
import threading
from pathlib import Path
from datetime import datetime
from http.server import HTTPServer, BaseHTTPRequestHandler

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–≥–µ–Ω—Ç
from chat_agent import KnowledgeAgent

# –î–ª—è Telegram –±–æ—Ç–∞
try:
    from telegram import Update
    from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
except ImportError:
    print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ python-telegram-bot")
    print("\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π:")
    print("  pip install python-telegram-bot")
    sys.exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞ –∑–Ω–∞–Ω–∏–π
KNOWLEDGE_DIR = Path(__file__).parent / "knowledge"
agent = KnowledgeAgent(str(KNOWLEDGE_DIR))

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
usage_stats = {
    'total_queries': 0,
    'users': set(),
    'started': datetime.now()
}


# Keep-alive –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
class KeepAliveHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/html')
        self.end_headers()
        
        html = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <title>Immigration Bot Status</title>
            <meta charset="utf-8">
        </head>
        <body>
            <h1>ü§ñ Immigration Telegram Bot</h1>
            <p><strong>Status:</strong> ‚úÖ Running</p>
            <p><strong>Total queries:</strong> {usage_stats['total_queries']}</p>
            <p><strong>Users:</strong> {len(usage_stats['users'])}</p>
            <p><strong>Uptime:</strong> {datetime.now() - usage_stats['started']}</p>
            <p><strong>Documents:</strong> {len(agent.documents)}</p>
            <hr>
            <p><small>This endpoint keeps the bot alive on Glitch.com</small></p>
        </body>
        </html>
        """
        self.wfile.write(html.encode())
    
    def log_message(self, format, *args):
        # –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
        pass


def run_keep_alive_server():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å keep-alive –≤–µ–±-—Å–µ—Ä–≤–µ—Ä"""
    port = int(os.environ.get('PORT', 8080))
    server = HTTPServer(('0.0.0.0', port), KeepAliveHandler)
    logger.info(f"Keep-alive server started on port {port}")
    server.serve_forever()


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
    user = update.effective_user
    usage_stats['users'].add(user.id)
    
    welcome_message = f"""
üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name}!

–Ø ‚Äî –±–æ—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º –∏–º–º–∏–≥—Ä–∞—Ü–∏–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞.

üìö **–ú–æ—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π:**
‚Ä¢ {len(agent.documents)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
‚Ä¢ 43 —Å—Ç—Ä–∞–Ω—ã
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–µ, –í–ù–ñ, Golden Visa

üí¨ **–ö–∞–∫ —Å–æ –º–Ω–æ–π —Ä–∞–±–æ—Ç–∞—Ç—å:**
–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.

**–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ Malta citizenship requirements
‚Ä¢ –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç Golden Visa –≤ –ì—Ä–µ—Ü–∏–∏?
‚Ä¢ –ö–∞–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –µ—Å—Ç—å –≤ Caribbean?
‚Ä¢ Portugal residence permit

üìå **–ö–æ–º–∞–Ω–¥—ã:**
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - —Å–ø—Ä–∞–≤–∫–∞
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π

‚ö†Ô∏è **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –ë–æ—Ç —Ä–∞–∑–º–µ—â—ë–Ω –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º —Ö–æ—Å—Ç–∏–Ω–≥–µ. –ü–µ—Ä–≤—ã–π –æ—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 10-15 —Å–µ–∫—É–Ω–¥ (–ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ).

–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å! üëá
"""
    await update.message.reply_text(welcome_message)


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /help - —Å–ø—Ä–∞–≤–∫–∞"""
    help_message = """
üìñ **–°–ü–†–ê–í–ö–ê**

**–ß—Ç–æ —è —É–º–µ—é:**
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –∏–º–º–∏–≥—Ä–∞—Ü–∏–∏
‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
‚Ä¢ –î–∞–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ Intermark)

**–í–∞–∂–Ω–æ:**
‚úÖ –Ø –∏—Å–ø–æ–ª—å–∑—É—é —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π
‚úÖ –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç –≤ –±–∞–∑–µ, —è —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂—É "–Ω–µ –∑–Ω–∞—é"
‚úÖ –í—Å–µ –æ—Ç–≤–µ—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏

**–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ Malta?
‚Ä¢ Golden Visa Greece —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
‚Ä¢ –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –í–ù–ñ –≤ Portugal?
‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º—ã citizenship –≤ Caribbean
‚Ä¢ Turkey residence permit process

**–ö–æ–º–∞–Ω–¥—ã:**
/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å—ã! üí¨
"""
    await update.message.reply_text(help_message)


async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""
    uptime = datetime.now() - usage_stats['started']
    
    stats_message = f"""
üìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê**

**–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π:**
‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(agent.documents)}
‚Ä¢ –°—Ç—Ä–∞–Ω: 43
‚Ä¢ –í–µ—Ä—Å–∏—è: {agent.kb_version or 'unknown'}

**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞:**
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {usage_stats['total_queries']}
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(usage_stats['users'])}
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç: {uptime.days}–¥ {uptime.seconds//3600}—á {(uptime.seconds//60)%60}–º

**–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:**
‚Ä¢ –ü–æ–∏—Å–∫: ~0.07 —Å–µ–∫
‚Ä¢ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ: –∞–∫—Ç–∏–≤–Ω–æ

**–•–æ—Å—Ç–∏–Ω–≥:** Glitch.com (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π)
‚ö†Ô∏è –ú–æ–∂–µ—Ç "–∑–∞—Å—ã–ø–∞—Ç—å" –ø—Ä–∏ –ø—Ä–æ—Å—Ç–æ–µ

üîç –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å!
"""
    await update.message.reply_text(stats_message)


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–æ–ø—Ä–æ—Å–æ–≤)"""
    user = update.effective_user
    question = update.message.text
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    usage_stats['total_queries'] += 1
    usage_stats['users'].add(user.id)
    
    logger.info(f"Question from {user.username or user.id}: {question}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç..."
    await update.message.chat.send_action("typing")
    
    try:
        # –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
        results = agent.search_documents(question, limit=5)
        
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        answer = agent.format_answer(question, results)
        
        # Telegram –∏–º–µ–µ—Ç –ª–∏–º–∏—Ç 4096 —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if len(answer) <= 4096:
            await update.message.reply_text(answer, parse_mode='Markdown')
        else:
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
            parts = []
            current_part = ""
            
            for line in answer.split('\n'):
                if len(current_part) + len(line) + 1 <= 4000:
                    current_part += line + '\n'
                else:
                    parts.append(current_part)
                    current_part = line + '\n'
            
            if current_part:
                parts.append(current_part)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–∞—Å—Ç–∏
            for i, part in enumerate(parts, 1):
                await update.message.reply_text(
                    f"{part}\n\n_[–ß–∞—Å—Ç—å {i}/{len(parts)}]_",
                    parse_mode='Markdown'
                )
        
        logger.info(f"Answer sent to {user.username or user.id}")
        
    except Exception as e:
        logger.error(f"Error processing question: {e}")
        await update.message.reply_text(
            "üòî –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å."
        )


async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫"""
    logger.error(f"Update {update} caused error {context.error}")


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
    
    if not TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_BOT_TOKEN")
        print("\n–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª .env –Ω–∞ Glitch:")
        print("  TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–æ—Ç_BotFather")
        sys.exit(1)
    
    print("=" * 80)
    print("ü§ñ TELEGRAM-–ë–û–¢ –î–õ–Ø –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô –ü–û –ò–ú–ú–ò–ì–†–ê–¶–ò–ò (Glitch Edition)")
    print("=" * 80)
    print(f"üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {len(agent.documents)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    print(f"üì¶ –í–µ—Ä—Å–∏—è: {agent.kb_version or 'unknown'}")
    print("üåê –ó–∞–ø—É—Å–∫ keep-alive —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º keep-alive —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    keep_alive_thread = threading.Thread(target=run_keep_alive_server, daemon=True)
    keep_alive_thread.start()
    
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    print("=" * 80)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("stats", stats_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("üí¨ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /start")
    print("üåê Keep-alive endpoint: http://–≤–∞—à-–ø—Ä–æ–µ–∫—Ç.glitch.me")
    print("\n–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 80)
    
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == '__main__':
    main()

